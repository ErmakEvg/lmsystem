@model LMPlatform.UI.ViewModels.BTSViewModels.AssignUserViewModel

<script src="~/Scripts/application/BTS/projectPart.js" type="text/javascript"></script>

<div id="assignUserForm">

    <ul class="nav nav-tabs">
        <li class="active"><a href="#assignStudent" data-toggle="tab"">Добавить студента</a></li>
        <li><a href="#assignLector" data-toggle="tab">Добавить лектора</a></li>
    </ul>
    <div class="tab-content" id="tabAddAssignment">
        <div class="tab-pane active" id="assignStudent">
            <div style="padding-top: 10px">
                @using (Html.BeginForm("SaveProjectUser", "BTS", FormMethod.Post))
                {
                    <div>
                        @Html.ValidationSummary("Ошибка!", new { @class = "alert alert-dismissable alert-danger" })
                    </div>
    
                    @Html.AntiForgeryToken()
        
                    @Html.HiddenFor(e => e.Id)

                    <div>
                        @Html.LabelFor(e => e.GroupId, new { @class = "control-label" })
                        @Html.DropDownListFor(e => e.GroupId, Model.GetGroups(), new { @class = "form-control", @id = "groups" })
                    </div>
            
@*<div id="studentList">
                        @Html.LabelFor(e => e.UserId, new { @class = "control-label" })
                        @Html.DropDownListFor(e => e.UserId, Model.GetStudents(Model.GroupId), new { @class = "form-control", @id = "students" })
                    </div>
            
                    <div id="studentRoleList">
                        @Html.LabelFor(e => e.RoleId, new { @class = "control-label" })
                        @Html.DropDownListFor(e => e.RoleId, Model.GetRoles(), new { @class = "form-control" })
                    </div>*@
                    <div id="studentOptions">
                        <div>
                            @Html.LabelFor(e => e.UserId, new { @class = "control-label" })
                            @Html.DropDownListFor(e => e.UserId, Model.GetStudents(Model.GroupId), new { @class = "form-control", @id = "students" })
                        </div>
                        <div>
                            @Html.LabelFor(e => e.RoleId, new { @class = "control-label" })
                            @Html.DropDownListFor(e => e.RoleId, Model.GetRoles(), new { @class = "form-control" })
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="tab-pane" id="assignLector">
            <div style="padding-top: 10px">
                @*<div id="lectorerList">
                    @Html.LabelFor(e => e.UserId, new { @class = "control-label" })
                    @Html.DropDownListFor(e => e.UserId, Model.GetLecturers(), new { @class = "form-control" })
                </div>

                <div id="lectorerRoleList">
                    @Html.LabelFor(e => e.RoleId, new { @class = "control-label" })
                    @Html.DropDownListFor(e => e.RoleId, Model.GetRoles(), new { @class = "form-control" })
                </div>*@
                <div id="lectorerOptions">
                    <div>
                        @Html.LabelFor(e => e.UserId, new { @class = "control-label" })
                        @Html.DropDownListFor(e => e.UserId, Model.GetLecturers(), new { @class = "form-control" })
                    </div>
                    <div>
                        @Html.LabelFor(e => e.RoleId, new { @class = "control-label" })
                        @Html.DropDownListFor(e => e.RoleId, Model.GetRoles(), new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>




    @*@using (Html.BeginForm("SaveProjectUser", "BTS", FormMethod.Post))
    {
        <div>
            @Html.ValidationSummary("Ошибка!", new { @class = "alert alert-dismissable alert-danger" })
        </div>
    
        @Html.AntiForgeryToken()
        
        @Html.HiddenFor(e => e.Id)

        <div>
            @Html.LabelFor(e => e.GroupId, new { @class = "control-label" })
            @Html.DropDownListFor(e => e.GroupId, Model.GetGroups(), new { @class = "form-control", @id = "groups" })
        </div>
            
        <div>
            @Html.LabelFor(e => e.StudentId, new { @class = "control-label" })
            @Html.DropDownListFor(e => e.StudentId, Model.GetStudents(Model.GroupId), new { @class = "form-control", @id = "students" })
        </div>
            
        <div>
            @Html.LabelFor(e => e.RoleId, new { @class = "control-label" })
            @Html.DropDownListFor(e => e.RoleId, Model.GetRoles(), new { @class = "form-control" })
        </div>
    }*@

</div>
<script type="text/javascript">
    $('.modal-dialog').width('540px');
    $('#assignUserForm a').tooltip(
    {
        placement: "right",
    });

    shared.initPlugins();
</script>
