@model LMPlatform.UI.ViewModels.MessageViewModels.DisplayMessageViewModel

@functions {
    public string GetReadClass(bool isRead)
    {
        return isRead ? "is-read" : "unread";
    }

}
<style>
    .msg-row {
        cursor: pointer;
        margin-top: 8px;
        font-size: larger;
    }

    .msg-content-head {
        position: absolute;
        left: 6px;
        width: 200px;
        color: inherit;
        font-weight: bold;
        padding-right: 10px;
    }

    .msg-content-subject {
        position: absolute;
        left: 207px;
        width: 200px;
        color: inherit;
    }

    .msg-content-preview {
        position: absolute;
        left: 408px;
        right: 0%;
        padding-right: 90px;
    }

    .msg-content-date {
        float: right;
        text-align: right;
        width: 90px;
    }

    .msg-overflow-hide {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<div class="msg-row @GetReadClass(Model.IsRead) " data-url="@Url.Action("ViewMessage", "Message", new {id = Model.UserMessageId})">
    <div class="msg-content-head msg-overflow-hide">
        <span class="glyphicon glyphicon-user"></span>
        <span style="padding-left: 2px;">
            @if (Model.AuthorId == WebSecurity.CurrentUserId)
            {
                foreach (var user in Model.Recipients)
                {
                @: @user.FullName;
                }
            }
            else
            {
                @: @Model.AuthorName
            }
        </span>
    </div>
    <div class="msg-content-subject msg-overflow-hide">
        <span>@Model.Subject</span>
    </div>

    <div class="msg-content-preview">
        <div class="msg-overflow-hide">
            @Model.PreviewText
        </div>
    </div>
    <div class="msg-content-date">
        @if (Model.HasAttachments)
        {
            <span class="glyphicon glyphicon-paperclip"></span>
        }
        @Model.Date
    </div>
</div>



